name: report-test
on: [push, pull_request]

jobs:
  # macOS:
  #   runs-on: macos-latest
  #   steps:
  #   - name: Checkout Repo
  #     uses: actions/checkout@v4
  #   - name: Download Love
  #     run: |
  #       curl -L -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" --output love12.zip --url "https://api.github.com/repos/love2d/love/actions/artifacts/971550220/zip"
  #       7z x love12.zip -o*
  #       7z x love12/love-macos.zip -o*
  #   - name: Run Test Suite
  #     run: love-macos/love.app/Contents/MacOS/love main.lua
  #   - name: Love Test Report
  #     uses: ellraiser/love-test-report@main
  #     with:
  #       name: Love Testsuite MacOS
  #       title: macos-test-report
  #       path: output/lovetest_runAllTests.md
  windows:
    runs-on: windows-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4    
    - name: Install Mesa 
      run: |
        curl -L --output mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/23.2.1/mesa3d-23.2.1-release-msvc.7z
        7z x mesa.7z -o*
        powershell.exe mesa\systemwidedeploy.cmd 1
    - name: Download Love
      run: |
        curl -L -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" --output love12.zip --url "https://api.github.com/repos/love2d/love/actions/artifacts/971550225/zip"
        7z x love12.zip -o*
        7z x love12/love-12.0-win64.zip -o*
    # - name: Run Tests (opengl)
    #   run: powershell.exe ./love-12.0-win64/love-12.0-win64/lovec.exe ./
    # - name: Love Test Report (opengl)
    #   uses: ellraiser/love-test-report@main
    #   with:
    #     name: Love Testsuite Windows (opengl)
    #     title: windows-test-report-opengl
    #     path: output/lovetest_runAllTests.md
      -name: Prepare Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: 1.3.204.0
        vulkan-components: Vulkan-Headers, Vulkan-Loader
        vulkan-use-cache: true
    # - name: Install Vulkan
    #   run: |
    #     $ver = (Invoke-WebRequest -Uri "https://vulkan.lunarg.com/sdk/latest.json" | ConvertFrom-Json).windows
    #     echo Version $ver
    #     $ProgressPreference = 'SilentlyContinue'
    #     Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/$ver/windows/VulkanSDK-$ver-Installer.exe" -OutFile VulkanSDK.exe
    #     echo Downloaded
    #     .\VulkanSDK.exe  --accept-licenses --default-answer --confirm-command install
    - name: Check Vulkan
      run: |
        echo "Setting Mesa Files"
        $Env:VK_ICD_FILENAMES = "mesa\x64\lvp_icd.x86_64.json"
        $Env:SDL_VULKAN_LIBRARY = "mesa\x64\vulkan_lvp.dll"
        echo "dir is C:\VulkanSDK\1.3.204.0"
        dir C:\VulkanSDK
        dir C:\VulkanSDK\1.3.204.0
        dir C:\VulkanSDK\1.3.204.0\Bin
        echo "Check Vulkan Envs"
        echo "PATH" $ENV:PATH
        echo "VULKAN_SDK" $ENV:VULKAN_SDK
        echo "VK_SDK_PATH" $ENV:VK_SDK_PATH
        echo "VK_ICD_FILENAMES" $ENV:VK_ICD_FILENAMES
        echo "SDL_VULKAN_LIBRARY" $ENV:SDL_VULKAN_LIBRARY
        echo "Vulkan Maintenance"
        powershell.exe "C:\VulkanSDK\$ver\maintenancetool.exe" list
    - name: Run Test Suite (Vulkan)
      run: |
        powershell.exe ./love-12.0-win64/love-12.0-win64/lovec.exe ./ --renderers vulkan
    - name: Love Test Report (Vulkan)
      uses: ellraiser/love-test-report@main
      with:
        name: Love Testsuite Windows (Vulkan)
        title: windows-test-report-vulkan
        path: output/lovetest_runAllTests.md
  # linux-os:
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - name: Update APT
  #     run: sudo apt-get update
  #   - name: Install Dependencies
  #     run: |
  #       sudo apt-get install --assume-yes build-essential git make cmake autoconf automake \
  #                                         libtool pkg-config libasound2-dev libpulse-dev libaudio-dev \
  #                                         libjack-dev libx11-dev libxext-dev libxrandr-dev libxcursor-dev \
  #                                         libxfixes-dev libxi-dev libxinerama-dev libxxf86vm-dev libxss-dev \
  #                                         libgl1-mesa-dev libdbus-1-dev libudev-dev libgles2-mesa-dev \
  #                                         libegl1-mesa-dev libibus-1.0-dev fcitx-libs-dev libsamplerate0-dev \
  #                                         libsndio-dev libwayland-dev libxkbcommon-dev libdrm-dev libgbm-dev
  #   - name: Checkout Repo
  #     uses: actions/checkout@v4
  #   - name: Download Love
  #     run: |
  #       curl -L -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" --output love12.AppImage --url "https://api.github.com/repos/love2d/love/actions/artifacts/971550219/zip"
  #       chmod +x love12.AppImage
  #   - name: Run Test Suite
  #     run: |
  #       ls
  #       xvfb-run ./love12.AppImage main.lua
  #   - name: Love Test Report
  #     uses: ellraiser/love-test-report@main
  #     with:
  #       name: Love Testsuite Linux
  #       title: linux-test-report
  #       path: output/lovetest_runAllTests.md
