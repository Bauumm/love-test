name: report-test
on: [push, pull_request]

jobs:
#  macOS:
#    runs-on: macos-latest
#    steps:
#    - name: Checkout Repo
#      uses: actions/checkout@v4
#    - name: Download Love
#      run: |
#        curl -L -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" --output love12.zip --url "https://api.github.com/repos/love2d/love/actions/artifacts/973472509/zip"
#        7z x love12.zip -o*
#        7z x love12/love-macos.zip -o*
#    - name: Run Test Suite
#      run: love-macos/love.app/Contents/MacOS/love main.lua
#    - name: Love Test Report
#      uses: ellraiser/love-test-report@main
#      with:
#        name: Love Testsuite MacOS
#        title: macos-test-report
#        path: output/lovetest_runAllTests.md
#    - name: Zip Test Output
#      run: |
#        7z a -tzip test-output-macos-opengl.zip output\
#    - name: Artifact Test Output
#      uses: actions/upload-artifact@v3
#      with:
#        name: test-output-macos-opengl
#        path: test-output-macos-opengl.zip
  windows:
    runs-on: windows-latest
    env: 
      ALSOFT_CONF: resources/alsoft.conf
      VK_ICD_FILENAMES: mesa/x64/lvp_icd.x86_64.json
      VULKAN_SDK: C:/VulkanSDK/1.3.231.1
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Install Mesa 
      run: |
        curl -L --output mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/23.2.1/mesa3d-23.2.1-release-msvc.7z
        7z x mesa.7z -o*
        powershell.exe mesa\systemwidedeploy.cmd 1
    - name: Download Love
      run: |
        curl -L -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" --output love12.zip --url "https://api.github.com/repos/love2d/love/actions/artifacts/973472519/zip"
        7z x love12.zip -o*
        7z x love12/love-12.0-win64.zip -o*
#    - name: Run Tests (opengl)
#      run: powershell.exe ./love-12.0-win64/love-12.0-win64/lovec.exe ./
#    - name: Love Test Report (opengl)
#      uses: ellraiser/love-test-report@main
#      with:
#        name: Love Testsuite Windows (opengl)
#        title: windows-test-report-opengl
#        path: output/lovetest_runAllTests.md
#    - name: Zip Test Output (opengl)
#      run: |
#        7z a -tzip test-output-windows-opengl.zip output\
#    - name: Artifact Test Output (opengl)
#      uses: actions/upload-artifact@v3
#      with:
#        name: test-output-windows-opengl
#        path: test-output-windows-opengl.zip
#    - name: Run Tests (opengles)
#      run: |
#        $ENV:LOVE_GRAPHICS_USE_OPENGLES = 1
#        powershell.exe ./love-12.0-win64/love-12.0-win64/lovec.exe ./
#    - name: Love Test Report (opengles)
#      uses: ellraiser/love-test-report@main
#      with:
#        name: Love Testsuite Windows (opengles)
#        title: windows-test-report-opengles
#        path: output/lovetest_runAllTests.md
#    - name: Zip Test Output (opengles)
#      run: |
#        7z a -tzip test-output-windows-opengles.zip output\
#    - name: Artifact Test Output (opengles)
#      uses: actions/upload-artifact@v3
#      with:
#        name: test-output-windows-opengles
#        path: test-output-windows-opengles.zip
    #  Setting up Vulkan to use with Mesa
    #  https://github.com/pal1000/mesa-dist-win/issues/63
    #  - name: Install Vulkan SDK
    #    uses: jakoch/install-vulkan-sdk-action@v1.0.1
    #    with:
    #      vulkan_version: 1.3.231.1
    #      install_runtime: true
    #      cache: true
    #      stripdown: true
    - name: Install Vulkan
      run: |
        curl -L --show-error --output VulkanSDK.exe https://sdk.lunarg.com/sdk/download/1.3.231.1/windows/VulkanSDK-1.3.231.1-Installer.exe
        dir
        ./VulkanSDK.exe --root C:/VulkanSDK/1.3.231.1 --accept-licenses --default-answer --confirm-command install com.lunarg.vulkan.core com.lunarg.vulkan.vma
        dir C:/VulkanSDK/1.3.231.1
        curl -L --show-error --output vulkan-runtime.zip https://sdk.lunarg.com/sdk/download/1.3.231.1/windows/vulkan-runtime-components.zip
        7z e vulkan-runtime.zip -o"C:/VulkanSDK/1.3.231.1/runtime/x64" */x64
        dir C:/VulkanSDK/1.3.231.1/runtime/x64
        dir C:/VulkanSDK/1.3.231.1/Bin
        echo "Copying Vulka DLL to Mesa x64"
        copy "C:/VulkanSDK/1.3.231.1/runtime/x64/vulkan-1.dll" "mesa/x64"
        copy "C:/VulkanSDK/1.3.231.1/runtime/x64/vulkan-1.dll" "C:/Windows/System32"
        copy "C:/VulkanSDK/1.3.231.1/runtime/x64/vulkan-1.dll" "love-12.0-win64/love-12.0-win64"
        echo "VULKAN_SDK" $ENV:VULKAN_SDK
        echo "VULKAN_VERSION" $ENV:VULKAN_VERSION
        echo "VK_ICD_FILENAMES" $ENV:VK_ICD_FILENAMES
        powershell.exe ./love-12.0-win64/love-12.0-win64/lovec.exe ./ --renderers vulkan
    # should we be setting the SDL_VULKAN_LIB to the mesa version or the runtime one?
    # tried both and both failed
    #- name: Run Test Suite (Vulkan)
    #  run: |
    #    dir "C:/VulkanSDK/1.3.231.1/Lib"
    #    dir "C:/VulkanSDK/1.3.231.1/runtime/x64"
    #    echo C:/VulkanSDK/1.3.231.1/runtime/x64 >> %GITHUB_PATH%
    #    echo "Copying Vulka DLL to Mesa x64"
    #    copy "C:/VulkanSDK/1.3.231.1/runtime/x64/vulkan-1.dll" "mesa/x64"
    #    copy "C:/VulkanSDK/1.3.231.1/runtime/x64/vulkan-1.dll" "C:/Windows/System32"
    #    copy "C:/VulkanSDK/1.3.231.1/runtime/x64/vulkan-1.dll" "love-12.0-win64/love-12.0-win64"
    #    dir "mesa/x64"
    #    echo mesa/x64 >> %GITHUB_PATH%
    #    $ENV:VK_ICD_FILENAMES = "mesa/x64/lvp_icd.x86_64.json"
    #    echo "Check Vulkan Envs"
    #    echo "VULKAN_SDK" $ENV:VULKAN_SDK
    #    echo "VULKAN_VERSION" $ENV:VULKAN_VERSION
    #    echo "VK_ICD_FILENAMES" $ENV:VK_ICD_FILENAMES
    #    echo "run love test with vulkan"
    #    dir "love-12.0-win64/love-12.0-win64"
    #    powershell.exe C:/VulkanSDK/1.3.231.1/runtime/x64/vulkaninfo.exe
    #    powershell.exe ./love-12.0-win64/love-12.0-win64/lovec.exe ./ --renderers vulkan
#  linux-os:
#    runs-on: ubuntu-20.04
#    env:
#      ALSOFT_CONF: resources/alsoft.conf
#    steps:
#    - name: Update APT
#      run: sudo apt-get update
#    - name: Install Dependencies
#      run: |
#        sudo apt-get install --assume-yes build-essential git make cmake autoconf automake \
#                                          libtool pkg-config libasound2-dev libpulse-dev libaudio-dev \
#                                          libjack-dev libx11-dev libxext-dev libxrandr-dev libxcursor-dev \
#                                          libxfixes-dev libxi-dev libxinerama-dev libxxf86vm-dev libxss-dev \
#                                          libgl1-mesa-dev libdbus-1-dev libudev-dev libgles2-mesa-dev \
#                                          libegl1-mesa-dev libibus-1.0-dev fcitx-libs-dev libsamplerate0-dev \
#                                          libsndio-dev libwayland-dev libxkbcommon-dev libdrm-dev libgbm-dev \
#                                          libfuse2 wmctrl
#    - name: Checkout Repo
#      uses: actions/checkout@v4
#    - name: Download Love
#      run: |
#        curl -L -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" --output love12.zip --url "https://api.github.com/repos/love2d/love/actions/artifacts/973472507/zip"
#        7z x love12.zip -o*
#        mv love12/love-*.AppImage love12/love12.AppImage
#        ls love12
#        chmod +x love12/love12.AppImage
#    - name: Run Test Suite (opengl)
#      run: |
#        export DISPLAY=0
#        xvfb-run --server-args="-screen 0, 360x240x24" love12/love12.AppImage main.lua 
#    - name: Love Test Report (opengl)
#      uses: ellraiser/love-test-report@main
#      with:
#        name: Love Testsuite Linux
#        title: linux-test-report-opengl
#        path: output/lovetest_runAllTests.md
#    - name: Zip Test Output (opengl)
#      run: |
#        7z a -tzip test-output-linux-opengl.zip output\
#    - name: Artifact Test Output (opengl)
#      uses: actions/upload-artifact@v3
#      with:
#        name: test-output-linux-opengl
#        path: test-output-linux-opengl.zip
#    - name: Run Test Suite (opengles)
#      run: |
#        export LOVE_GRAPHICS_USE_OPENGLES=1
#        export DISPLAY=1
#        xvfb-run --server-args="-screen 1, 360x240x24" love12/love12.AppImage main.lua 
#    - name: Love Test Report (opengles)
#      uses: ellraiser/love-test-report@main
#      with:
#        name: Love Testsuite Linux
#        title: linux-test-report-opengles
#        path: output/lovetest_runAllTests.md
#    - name: Zip Test Output (opengles)
#      run: |
#        7z a -tzip test-output-linux-opengles.zip output\
#    - name: Artifact Test Output (opengles)
#      uses: actions/upload-artifact@v3
#      with:
#        name: test-output-linux-opengles
#        path: test-output-linux-opengles.zip
